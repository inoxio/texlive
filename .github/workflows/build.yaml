name: Build and Push

on:
  push:
  schedule:
    - cron: '0 3 * * 1'

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  basic:
    name: Build and Push Basic Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Whats my IP
        run: curl --silent http://ipconfig.io

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: |
          docker build \
              --file Dockerfile.basic \
              --tag "${REGISTRY}/${IMAGE_NAME}-basic:$(date +'%Y.%W')" \
              --tag "${REGISTRY}/${IMAGE_NAME}-basic:latest" \
              .

      - name: Push to registry ${{ env.REGISTRY }}
        run: docker push "${REGISTRY}/${IMAGE_NAME}-basic" --all-tags

      - name: Clean old images
        uses: actions/delete-package-versions@v5
        with:
          package-name: 'texlive-basic'
          min-versions-to-keep: 10

  full:
    name: Build and Push Full Image
    runs-on: ubuntu-latest
    needs: basic

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Whats my IP
        run: curl --silent http://ipconfig.io

      - name: Log into registry ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build image
        run: |
          docker build \
              --file Dockerfile.full \
              --build-arg "VERSION=$(date +'%Y.%W')" \
              --tag "${REGISTRY}/${IMAGE_NAME}-full:$(date +'%Y.%W')" \
              --tag "${REGISTRY}/${IMAGE_NAME}-full:latest" \
              .

      - name: Push to registry ${{ env.REGISTRY }}
        run: docker push "${REGISTRY}/${IMAGE_NAME}-full" --all-tags

      - name: Clean old images
        uses: actions/delete-package-versions@v5
        with:
          package-name: 'texlive-full'
          min-versions-to-keep: 10
